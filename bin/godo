#!/usr/bin/env node

var docopt = require('docopt').docopt;
var path = require('path');
var Godo = require('..');
var fs = require('fs');

var doc = 'Usage: godo [-d DIR] [options] NAME [TASK]' +
'\n' +
'\nOptions:' +
'\n  -h, --help     Show this screen.' +
'\n  -v, --version  Show Godo version.' +
'\n  -l             List tasks.' +
'\n  -d DIR         The directory where to store tasks. [default: .godo-tasks]' +
'\n  -e HASH        Edit a task.' +
'\n  -f HASH        Finish a task.';
var cli = docopt(doc, {help: true, version: '0.2.0'});
// return console.log(cli);

// TODO Should probably find a cleaner way to do this...
var file = path.resolve('/home', process.env['USER'], cli['-d'], cli['NAME']);
// return console.log(file);

function writeToFile(file, str, cb) {
	fs.writeFile(file, str, function(err){
		if (err) {
			if (err.code === 'ENOENT')
				return console.log('On second thought... DIRECTORY DOESN\'T EXIST!');
			else return console.error(err);
		} else cb(arguments);
	});
}

if (cli['TASK']) {
	fs.readFile(file, {encoding: 'utf8'}, function(err, data){
		if (err) {
			if (err.code === 'ENOENT') {
				console.error('FILE AND/OR DIRECTORY DOESN\'T EXIST\nThe file will be created but make sure the directory exists...');
			} else return console.error(err);
		}
		var newTask = Godo.newTask(cli['TASK']);
		// check for files that don't exist
		var toWrite = (typeof data === 'undefined') ? newTask : data + newTask;

		writeToFile(file, toWrite, function(a){});
	});
}

