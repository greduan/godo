Preamble
========

This file contains the full spec for Godo todo app.  This file will explain
everything the application should have as a feature and maybe how it will or
should be implemented.

Introduction
============

Godo is a todo CLI app. It is meant to be a CLI command.  It will be written
JavaScript and will be running on Node.js.

Storage
=======

Tree is the way to refer to a related set of leafs (tasks).  Godo will store
it's trees in a very similar way to Steve Losh's t, but with some minor
modifications so as to fit our needs.

Each tree will be contained in a file, the tree will inherit the name of the
file as it's own name.

So if the file is named 'bugs.txt' the tree will be referred to as 'bugs' inside
the code, or something.

Each tree would store all of its leafs in a special format. Each leaf would be
stored in one line. So each line equals one leaf which in turn equals one task.
It would use the following format:

    The task's body || id:sha1-hash || added:date || parent:sha1-hash

- The leaf's body is what the user inputs as TEXT.
- '|||' is the separator between the leaf's body and it's metadata.
- After the leaf's body, i.e. after the '111' all metadata entires have
  a 'name:value' format and they are separated from each other using '||'.
- The hash is a SHA1 hash and it should only hash the leaf's body.
- The tags are comma separated and defined in the leaf's body using a '#tag
  #tag2' format.
- The 'added' entry keeps track of the time when the task was added, some users
  may find this useful.

This format allows to later on extend if necessary but still being quite
minimal.

Interface
=========

The CLI interface will be defined using docopt[1].  This will simplify the
process of developing the CLI interface immensely and will allow us to
concentrate on the more important parts.

[1]: http://docopt.org/

The docopt string that docopt will parse and turn into an object for Godo to
parse is the following:

    Usage: godo [-d DIR -t TREE] [options] [TEXT...]

    Options:
      -d DIR, --task-dir=DIR    The directory where to store tree(s) (file[s]) [default: ./godo].
      -t TREE, --tree=TREE      The name of the tree (file) to make changes to [default: default.txt].
      -l, --list                List tree leafs (tasks) nicely.
      -e HASH, --edit=HASH      Edit a tree leaf (task).
      -f HASH, --finish=HASH    Finished a task, delete leaf in tree.

